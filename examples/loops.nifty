package loops;

using <fmt>

fn printALine() {
    println("----------")
}

fn main() {
    println("For loops!")
    
    for (let i = 0; i < 10; i += 1) {
        println(i)
    }
    
    printALine()
    
    for (i := 0; i < 10; ++i) {
        println(i)
    }
    
    printALine()
    
    for (0 ..< 10) {
        println("For loop!")
    }
    
    printALine()
    
    // With step 2.
    for (val i in 0 ..< 10; 2) {
        println(i)
    }
    
    printALine()
    
    // Nothing should happen here.
    for (val i in 10 ..= 0) {
        println(i)
    }
    
    for <(val i in 10 ..= 0) {
        println(i)
    }
    
    printALine()
    println("While loops!")
    
    x := 0
    while (x < 5) {
        println(x)
        x++
    }
    
    printALine()
    
    // Like do ... while
    #[atLeastOnce]
    while (x < 0) {
        println(x)
    }
    
    printALine();
    println("Unil loops!")
    
    until (x == 0) {
        println(x)
        x--
    }
    
    printALine()
    
    // Like do ... until
    #[atLeastOnce]
    until (x < 0) {
        println(x)
    }
}
